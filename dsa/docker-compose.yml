---
version: '3'
services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80" # HTTP port
      - "8090:8080" # traefik UI
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  girder:
    build: .
    privileged: true
    # Set CURRENT_UID to your user id (e.g., `CURRENT_UID=$(id -u):$(id -g)`)
    # so that assetstores and logs are owned by yourself.
    user: ${CURRENT_UID}
    restart: unless-stopped
    # Set DSA_PORT to expose the interface on another port (default 8080).
    ports:
      #- "${DSA_PORT:-8080}:8080"
      - "8080-8089:8080"
    environment:
      - GIRDER_CONFIG=/conf/girder.local.conf
    command: bash -c 'python /conf/girder_config.py && girder mount /fuse && girder serve'
    volumes:
      # Default assetstore
      - /gpfs/mskmind_ess/pathology_images:/assetstore
      # Location of girder.local.conf and girder_config.py
      - .:/conf
      # Location to store logs
      - /gpfs/mskmind_ess/dsa/logs:/logs
      # Needed to use slicer_cli_web to run docker containers.  These really
      # should be based on the DOCKER_* environment variables as well.
      - /usr/bin/docker:/usr/bin/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # Needed to mount remote assetstores as if they were filesystems (i.e.,
      # to work fully with S3)
      - /etc/passwd:/etc/passwd:ro
      # Add additional mounts here to get access to existing files on your
      # system.  Also add them to the worker container to reduce copying.
    ### modify REPLACE_WITH_HOST
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.girder.rule=Host(`REPLACE_WITH_HOST`)"
      - "traefik.http.routers.girder.entrypoints=web"  
    depends_on:
      - mongodb
      - memcached
      - rabbitmq
  mongodb:
    image: "mongo:latest"
    # Set CURRENT_UID to your user id (e.g., `CURRENT_UID=$(id -u):$(id -g)`)
    # so that database files and logs are owned by yourself.
    user: ${CURRENT_UID}
    restart: unless-stopped
    command: --nojournal --logpath /var/log/mongodb/mongodb.log
    volumes:
      # Location to store database files
      - /gpfs/mskmind_ess/dsa/db:/data/db
      - /gpfs/mskmind_ess/dsa/logs:/var/log/mongodb
    # Uncomment to allow access to the database from outside of the docker
    # network.
    # ports:
    #  - "27017"
  memcached:
    image: memcached
    command: -m 4096
    restart: unless-stopped
    # Uncomment to allow access to memcached from outside of the docker network
    # ports:
    #   - "11211"
  rabbitmq:
    image: "rabbitmq:latest"
    restart: unless-stopped
    # Uncomment to allow access to rabbitmq from outside of the docker network
    # ports:
    #   - "5672"
  worker:
    build: .
    privileged: true
    # Set CURRENT_UID to your user id (e.g., `CURRENT_UID=$(id -u):$(id -g)`)
    # so that logs and tmp files are owned by yourself.
    user: ${CURRENT_UID}
    restart: unless-stopped
    command: |
      bash -c "TEMP=${TEMP:-/gpfs/mskmind_ess/dsa/tmp} python -m girder_worker --concurrency=2 -Ofair --prefetch-multiplier=1 >>/logs/worker.log 2>&1"
    volumes:
      # Location to store logs
      - /gpfs/mskmind_ess/dsa/logs:/logs
      # Needed to use slicer_cli_web to run docker containers
      - /usr/bin/docker:/usr/bin/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # Needed to allow transferring data to slicer_cli_web docker containuers
      - ${TEMP:-/gpfs/mskmind_ess/dsa/tmp}:${TEMP:-/gpfs/mskmind_ess/dsa/tmp}
      # Assetstore to reduce copying
      - /gpfs/mskmind_ess/pathology_images:/assetstore
    depends_on:
      - rabbitmq
